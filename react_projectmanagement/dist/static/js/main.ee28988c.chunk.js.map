{"version":3,"sources":["component/layouts/SignInLinks.js","store/actions/authActions.js","component/layouts/SignOutLinks.js","component/layouts/Navbar.js","component/dashboard/Notification.js","component/project/ProjectSummary.js","component/project/ProjectList.js","component/dashboard/Dashboard.js","component/project/ProjectDetail.js","component/auth/SignIn.js","component/auth/Signup.js","component/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","layouts_SignInLinks","layouts_SignOutLinks","Link","Notification","notifications","map","notif","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","console","log","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","project_ProjectSummary","DashBoard","_this$props","this","project_ProjectList","dashboard_Notification","Redirect","Component","compose","firestore","ordered","notification","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credentials","signInWithEmailAndPassword","catch","err","paylaod","SignUp","firstName","lastName","signup","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","payload","App","BrowserRouter","layouts_Navbar","Switch","Route","exact","path","component","Dashboard","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","ReactDOM","render","lib","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSA0BeA,oBAAQ,KARG,SAACC,GACvB,MAAM,CACFC,QAAQ,kBAAKD,ECIV,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAhBC,eAGjBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CACLO,KAAK,0BDHNR,CAjBI,SAACS,GAChB,OACAC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,eAAJ,KACAL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGI,QAASP,EAAMP,SAAlB,WAAJ,MACAQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCAAmCJ,EAAMQ,QAAQC,UAA/E,QEFOC,EATK,WAChB,OACAT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,UAAJ,KACAL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,UAAJ,OCmBOf,oBAPO,SAACoB,GACnB,MAAO,CACLd,KAAKc,EAAMC,SAASf,KACpBW,QAAQG,EAAMC,SAASJ,UAIdjB,CAnBD,SAACS,GAAQ,IACZH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QACPK,EAAQhB,EAAKiB,IAAMb,EAAAC,EAAAC,cAACY,EAAD,CAAaP,QAASA,IAAaP,EAAAC,EAAAC,cAACa,EAAD,MAC5D,OACAf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAG,IAAIF,UAAU,cAAvB,mBACCS,uBCcEK,EA1BM,SAAClB,GAAS,IACpBmB,EAAiBnB,EAAjBmB,cACP,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,iBACAH,EAAAC,EAAAC,cAAA,MAAKC,UAAU,iBACVe,GAAiBA,EAAcC,IAAI,SAACC,GACjC,OACIpB,EAAAC,EAAAC,cAAA,MAAImB,IAAKD,EAAME,IACXtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BiB,EAAMG,KAApC,KACAvB,EAAAC,EAAAC,cAAA,YAAOkB,EAAMI,QAAb,KACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVsB,IAAOL,EAAMM,KAAKC,UAAUC,mBCCtDC,EAdQ,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,QAErB,OADAC,QAAQC,IAAIF,GAER/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqB4B,EAAQG,OAC7ClC,EAAAC,EAAAC,cAAA,uBAAe6B,EAAQI,gBAAvB,IAAyCJ,EAAQK,eAAjD,KACApC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAasB,IAAOM,EAAQM,UAAUV,UAAUW,WAA7D,QCQDC,EAdK,SAAAT,GAAc,IAAZU,EAAYV,EAAZU,SAElB,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACVqC,GAAYA,EAASrB,IAAI,SAAAY,GACtB,OACA/B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMX,GAAI,YAAY0B,EAAQT,GAAKD,IAAKU,EAAQT,IAC/CtB,EAAAC,EAAAC,cAACuC,EAAD,CAAiBV,QAASA,kCCFrCW,6MACFhC,MAAQ,2EACC,IAAAiC,EACqCC,KAAK7C,MAAxCyC,EADFG,EACEH,SAAW5C,EADb+C,EACa/C,KAAOsB,EADpByB,EACoBzB,cAGzB,OAAItB,EAAKiB,IAILb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC2C,EAAD,CAAaL,SAAUA,KAE3BxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC4C,EAAD,CAAe5B,cAAeA,OATnClB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBAPR2C,aAkCTC,oBACX3D,kBAVmB,SAACoB,GACpB,MAAO,CACH8B,SAAS9B,EAAMwC,UAAUC,QAAQX,SACjC5C,KAAKc,EAAMC,SAASf,KACpBwD,aAAa1C,EAAMwC,UAAUC,QAAQjC,iBAOzCmC,2BAAiB,CACb,CAACC,WAAW,WAAaC,QAAQ,CAAC,YAAa,SAC/C,CAACD,WAAY,gBAAiBE,MAAO,EAAGD,QAAQ,CAAC,OAAQ,WAJlDN,CAKPP,GCOOO,oBACb3D,kBAZsB,SAACoB,EAAO+C,GAE9B,IAAMnC,EAAKmC,EAASC,MAAMC,OAAOrC,GAC3BkB,EAAW9B,EAAMwC,UAAUU,KAAKpB,SAEtC,MAAO,CACLT,QAFcS,EAAWA,EAASlB,GAAM,KAGxC1B,KAAKc,EAAMC,SAASf,QAMtByD,2BAAiB,CACf,CAACC,WAAW,cAHDL,CAhDO,SAAClD,GAAU,IACtBgC,EAAmBhC,EAAnBgC,QAEP,OAF0BhC,EAAVH,KAEPiB,IAINkB,EAEC/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAEVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,IAA+B4B,EAAQG,MAAvC,KACAlC,EAAAC,EAAAC,cAAA,SAAI6B,EAAQP,SAEXxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACZH,EAAAC,EAAAC,cAAA,wBAAgB6B,EAAQI,gBAAxB,IAA0CJ,EAAQK,eAAlD,KACApC,EAAAC,EAAAC,cAAA,WAAMuB,IAAOM,EAAQM,UAAUV,UAAUW,gBAYzDtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,4BA3BGF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,sBCLpBwD,6MACFnD,MAAQ,CACJoD,MAAM,GACNC,SAAS,MAEbC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOhD,GAAK2C,EAAEK,OAAOC,WAKhCC,aAAc,SAACP,GACXA,EAAEQ,iBACFP,EAAKnE,MAAM2E,OAAOR,EAAKxD,gFAIlB,IAAAiC,EACqBC,KAAK7C,MAAxB4E,EADFhC,EACEgC,UACH,OAFChC,EACa/C,KACNiB,IACGb,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAIxBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,SAAUhC,KAAK4B,aAAerE,UAAU,SAC1CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQwB,GAAG,QAAQwD,SAAUlC,KAAKoB,gBAIlDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWwB,GAAG,WAAWwD,SAAUlC,KAAKoB,gBAIxDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAIyE,GAAkB,cA3CtC3B,aAoEN1D,oBAbS,SAACoB,GACrB,MAAO,CACHiE,UAAUjE,EAAMd,KAAK+E,UACrB/E,KAAKc,EAAMC,SAASf,OAID,SAACL,GACxB,MAAM,CACFmF,OAAO,SAACK,GAAD,OAAQxF,GRtEAyF,EQsEgBD,ERrE5B,SAACxF,EAAWE,EAAZqC,IACcnC,EADwBmC,EAAfnC,eAGjBC,OAAOqF,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdlE,KAAK,WACHN,EAAS,CACLO,KAAK,mBAGVoF,MAAM,SAACC,GACN5F,EAAS,CACLO,KAAK,cACLsF,QAAQD,SAfF,IAACH,KQ0ER1F,CAA6CuE,GCrEtDwB,6MACF3E,MAAQ,CACJoD,MAAM,GACNC,SAAS,GACTuB,UAAU,GACVC,SAAS,MAEbvB,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOhD,GAAK2C,EAAEK,OAAOC,WAKhCC,aAAc,SAACP,GACXA,EAAEQ,iBAEFP,EAAKnE,MAAMyF,OAAOtB,EAAKxD,gFAGlB,IAAAiC,EAEqBC,KAAK7C,MAAxBH,EAFF+C,EAEE/C,KAAK+E,EAFPhC,EAEOgC,UAEZ,OAAG/E,EAAKiB,IACGb,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,MAIpBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,SAAUhC,KAAK4B,aAAerE,UAAU,SAC1CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQwB,GAAG,QAAQwD,SAAUlC,KAAKoB,gBAIlDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAWwB,GAAG,WAAWwD,SAAUlC,KAAKoB,gBAIxDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,aAAf,cACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,YAAYwD,SAAUlC,KAAKoB,gBAGrDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,aACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,WAAWwD,SAAUlC,KAAKoB,gBAMpDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAIyE,GAAkB,cA5DtC3B,aAmFN1D,oBAZQ,SAACoB,GACpB,MAAM,CACFd,KAAMc,EAAMC,SAASf,KACrB+E,UAAUjE,EAAMd,KAAK+E,YAGH,SAACpF,GACvB,MAAO,CACHiG,OAAO,SAACC,GAAD,OAAalG,ET/CN,SAACkG,GACnB,OAAO,SAAClG,EAAWE,EAAZiG,GAAuD,IAA/B/F,EAA+B+F,EAA/B/F,YAAcgG,EAAiBD,EAAjBC,aACnChF,EAAWhB,IACXuD,EAAYyC,IAClBhF,EAASf,OAAOgG,+BACZH,EAAQ3B,MACR2B,EAAQ1B,UACVlE,KAAK,SAACgG,GAEJ,OAAO3C,EAAUI,WAAW,SAASwC,IAAID,EAAItE,KAAKV,KAAKkF,IAAI,CACvDT,UAAUG,EAAQH,UAClBC,SAASE,EAAQF,SACjB/E,SAASiF,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAItD1F,KAAK,WACJN,EAAS,CACLO,KAAK,oBAEVoF,MAAM,SAACC,GACN5F,EAAS,CACLO,KAAK,eACLqF,IAAIA,OSwBiBK,CAAOC,OAI7BnG,CAA4C+F,WClFrDW,6MACFtF,MAAQ,CACJwB,MAAM,GACNV,QAAQ,MAEZwC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAEK,OAAOhD,GAAK2C,EAAEK,OAAOC,WAKhCC,aAAc,SAACP,GACXA,EAAEQ,iBACFP,EAAKnE,MAAMkG,cAAc/B,EAAKxD,OAE9BwD,EAAKnE,MAAMmG,QAAQC,KAAK,8EAMxB,OAFevD,KAAK7C,MAAbH,KAEEiB,IAILb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0E,SAAUhC,KAAK4B,aAAerE,UAAU,SAC1CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,wBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAOwB,GAAG,QAAQwD,SAAUlC,KAAKoB,gBAIjDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,WAAf,WACA7E,EAAAC,EAAAC,cAAA,YAAUoB,GAAG,UACTnB,UAAU,uBACT2E,SAAUlC,KAAKoB,gBAIxBhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAlB,aArBNH,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAU1C,GAAG,mBAvBH2C,aAkEZ1D,oBAPQ,SAACoB,GACrB,MAAO,CACHd,KAAKc,EAAMC,SAASf,OARF,SAACL,GACvB,MAAO,CACH0G,cAAe,SAAClE,GAAD,OAAWxC,ECxDL,SAACwC,GAC1B,OAAO,SAACxC,EAAWE,EAAZqC,GAAsDA,EAA/BnC,YAA+B,IAEnDuD,GAAYyC,EAFuC7D,EAAlB6D,gBAGjCpF,EAAUd,IAAWkB,SAASJ,QAC9B6F,EAAW3G,IAAWkB,SAASf,KAAKiB,IAE1CqC,EAAUI,WAAW,YAAY+C,IAAjCjC,OAAAkC,EAAA,EAAAlC,CAAA,GACOrC,EADP,CAEII,gBAAgB5B,EAAQ+E,UACxBlD,eAAe7B,EAAQgF,SACvBa,SAASA,EACT/D,UAAW,IAAIkE,QAChB1G,KAAK,WACJN,EAAS,CACLO,KAAK,iBACL0G,QAAQzE,MAEbmD,MAAM,SAACC,GACN5F,EAAS,CACLO,KAAK,uBACL0G,QAAQrB,ODmCmBc,CAAclE,OAWzCzC,CAA4C0G,GE3C7CS,mLAjBX,OACEzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACA1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOC,OAAK,EAAEC,KAAK,IAAIC,UAAWC,IAClCjH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWE,IACtClH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWnD,IACjC7D,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW3B,IACjCrF,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWhB,cAXzBhD,aCEEmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5D,MACvB,2DCfN,IAAM6D,EAAY,GA8BHC,EA3BK,WAA4B,IAA3B9G,EAA2B+G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBF,EACvB,QAD4CE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7B7H,MACX,IAAK,cACD,OAAOsE,OAAAkC,EAAA,EAAAlC,CAAA,GACA1D,EADP,CACciE,UAAW,iBAE7B,IAAK,eACD,OAAOP,OAAAkC,EAAA,EAAAlC,CAAA,GACA1D,EADP,CACciE,UAAW,OAE7B,IAAK,iBACD,OAAOjE,EACX,IAAK,gBACD,OAAO0D,OAAAkC,EAAA,EAAAlC,CAAA,GACA1D,EADP,CAEIiE,UAAU,OAElB,IAAK,eACD,OAAAP,OAAAkC,EAAA,EAAAlC,CAAA,GACO1D,EADP,CACciE,UAAU,oBAE5B,QACI,OAAOjE,IC5Bb6G,EAAY,CACd/E,SAAS,CACL,CAAClB,GAAG,IAAMY,MAAM,cAAgBV,QAAQ,kBACxC,CAACF,GAAG,IAAMY,MAAM,cAAgBV,QAAQ,kBACxC,CAACF,GAAG,IAAMY,MAAM,cAAgBV,QAAQ,oBAmBjCoG,EAZQ,WAA4B,IAA3BlH,EAA2B+G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBF,EAC1B,QAD+CE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAChC7H,MACX,IAAK,iBAEL,IAAK,uBAEL,QACI,OAAOY,YCJJmH,EAPKC,0BAAgB,CAChClI,KAAK4H,EACLzF,QAAQ6F,EACR1E,UAAU6E,mBACVpH,SAASqH,6DCCXrH,IAASsH,cARI,CACXC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,iBAGrB5H,IAASuC,YAAYsF,SAAS,CAACC,uBAAsB,IAEtC9H,QAAf,ECDI+H,EAAQC,sBAAYd,EAAc5E,kBACpC2F,0BAAgBC,IAAMC,kBAAkB,CAACnJ,0BAAagG,+BACtDoD,yBAAeC,GACfC,6BAAmBD,EAAU,CACzBE,wBAAuB,EACvBC,YAAY,QACZC,mBAAmB,MAY1BC,IAASC,OACNtJ,EAAAC,EAAAC,cAACqJ,EAAA,SAAD,CAAUb,MAAOA,GAAO1I,EAAAC,EAAAC,cAACsJ,EAAD,OACxBC,SAASC,eAAe,SL+FtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhK,KAAK,SAAAiK,GACjCA,EAAaC","file":"static/js/main.ee28988c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\n\r\n\r\n\r\n\r\nconst SignInLinks =(props)=>{\r\n    return (\r\n    <ul className=\"right\">\r\n        <li><NavLink to=\"/create\">New Project</NavLink> </li>\r\n        <li><a onClick={props.signOut} >Log Out</a>  </li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink> </li>\r\n    </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps =(dispatch) =>{\r\n    return{\r\n        signOut:()=> dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null ,mapDispatchToProps)(SignInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch , getState ,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email ,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({\r\n                type:\"LOGIN_SUCESS\"\r\n            \r\n            })\r\n        }).catch((err) =>{\r\n            dispatch({\r\n                type:\"LOGIN_ERROR\",\r\n                paylaod:err\r\n            })\r\n        })\r\n    \r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch, getState , {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({\r\n                type:\"SIGNOUT_SUCESS\"\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signup = (newUser)=>{\r\n    return (dispatch , getState , {getFirebase , getFirestore}) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email , \r\n            newUser.password\r\n        ).then((res) =>{\r\n            // using the auth user id in the user collection\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName:newUser.lastName,\r\n                initials:newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n\r\n            \r\n        }).then(()=>{\r\n            dispatch({\r\n                type:\"SIGNUP_SUCESS\"\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type:'SIGNUP_ERROR',\r\n                err:err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink } from 'react-router-dom';\r\n\r\nconst SignOutLinks =()=>{\r\n    return (\r\n    <ul className=\"right\">\r\n        <li><NavLink to=\"/signup\">Signup</NavLink> </li>\r\n        <li><NavLink to=\"/signin\">Login </NavLink> </li>\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks;","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport {connect } from 'react-redux'\r\n\r\nimport SignInLinks from './SignInLinks'\r\nimport SignOutLinks from './SignOutLinks'\r\n\r\nconst Navbar =(props)=>{\r\n    const {auth ,profile } = props;\r\n    const links = auth.uid ? <SignInLinks profile={profile} /> :<SignOutLinks />;\r\n    return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n            <Link to='/' className=\"brand-logo\">Project Manager</Link>\r\n            {links }\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n      auth:state.firebase.auth,\r\n      profile:state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\nconst Notification = (props )=>{\r\n    const {notifications} = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content \">\r\n                    <span className=\"card-title\">Notification </span>\r\n                    <ul  className=\"notifications\">\r\n                        {notifications && notifications.map((notif)=>{\r\n                            return (\r\n                                <li key={notif.id}>\r\n                                    <span className=\"pink-text\"> {notif.user} </span>\r\n                                    <span>{notif.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(notif.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project})=>{\r\n    console.log(project);\r\n    return (\r\n        <div className=\"card blue-grey darken-1 project-summary z-depth-5\">\r\n            <div className=\"card-content white-text \">\r\n                <span className=\"card-title header\">{project.title}</span>\r\n                <p>Posted By: {project.authorFirstName} {project.authorLastName} </p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()} </p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport {Link }  from 'react-router-dom'\r\nimport ProjectSummary from './ProjectSummary'\r\n\r\n const ProjectList =({projects})=>{\r\n   \r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project =>{\r\n                return ( \r\n                <Link to={\"/project/\"+project.id}  key={project.id} >\r\n                 <ProjectSummary  project={project}/>\r\n                </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList;","import React, { Component } from 'react';\r\n\r\nimport Notification from './Notification';\r\nimport ProjectList from '../project/ProjectList';\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose } from  'redux'\r\nimport { Redirect } from  'react-router-dom'\r\n\r\nclass DashBoard extends Component {\r\n    state = {  }\r\n    render() { \r\n        const {projects , auth  ,notifications} = this.props;\r\n\r\n\r\n        if(!auth.uid){\r\n            return <Redirect to=\"/signin\" />\r\n        }\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification  notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            \r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nconst mapStatetoProps =(state) =>{\r\n    return {\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth ,\r\n        notification:state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n        {collection:'projects' , orderBy:['createdAt', 'desc' ] },\r\n        {collection: 'notifications', limit: 5, orderBy:['time', 'desc' ] }\r\n    ]))(DashBoard);\r\n","import React from 'react'\r\nimport {connect } from 'react-redux'\r\nimport {firestoreConnect}from 'react-redux-firebase'\r\nimport {compose } from 'redux'\r\nimport {Redirect } from 'react-router-dom'\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetail = (props) => {\r\n    const {project, auth  } = props ;\r\n\r\n    if(!auth.uid){\r\n      return <Redirect to=\"/sighin\" /> ;\r\n    }\r\n\r\n    if(project){\r\n      return (\r\n        <div className=\"container section project-details\">\r\n            \r\n             <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> {project.title} </span>\r\n                    <p>{project.content}</p>\r\n    \r\n                     <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                     </div>     \r\n    \r\n    \r\n                </div>\r\n    \r\n            </div>\r\n          \r\n        </div>\r\n      )\r\n    }else{\r\n      return (\r\n        <div className=\"container center\">\r\n          <h1>Loading . . .</h1>\r\n        </div>\r\n      )\r\n    }\r\n  \r\n}\r\nconst mapStateToProps = (state ,ownProps)=>{\r\n\r\n  const id = ownProps.match.params.id ;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null ;\r\n  return {\r\n    project:project,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection:'projects'}\r\n  ])\r\n)(ProjectDetail)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport {Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n    state = { \r\n        email:'',\r\n        password:''\r\n     }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n        \r\n        \r\n    }\r\n    render() { \r\n        const {authError, auth} = this.props;\r\n            if(auth.uid){\r\n                return <Redirect to=\"/\" /> ;\r\n            }\r\n\r\n            return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}  className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\"> Sign In </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                        {authError ? <p>{authError }</p> : '' }\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        authError:state.auth.authError,\r\n        auth:state.firebase.auth \r\n    }\r\n}\r\n \r\n const mapDispatchToProps= (dispatch)=>{\r\n    return{\r\n        signIn:(cred)=>dispatch(signIn(cred))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( SignIn)\r\n","import React, { Component } from 'react';\r\nimport {Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport { signup } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = { \r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:''\r\n     }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signup(this.state);\r\n        \r\n    }\r\n    render() { \r\n\r\n        const {auth,authError } = this.props;\r\n\r\n        if(auth.uid){\r\n            return <Redirect to=\"/\" /> ;\r\n         }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}  className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\"> Sign Up </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\r\n                        <div className=\"red-text center\">\r\n                        {authError ? <p>{authError }</p> : '' }\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        auth :state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        signup:(newUser) => dispatch(signup(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport {Redirect } from 'react-router-dom'\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = { \r\n        title:'',\r\n        content:''\r\n     }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        \r\n        this.props.history.push('/')\r\n        \r\n    }\r\n    render() { \r\n        const {auth} = this.props;\r\n\r\n        if(!auth.uid){\r\n           return <Redirect to=\"/sighin\" /> ;\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}  className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\"> Create New Project </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" \r\n                            className=\"materialize-textarea\"\r\n                             onChange={this.handleChange} ></textarea>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Submit</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps =(dispatch) =>{\r\n    return {\r\n        createProject :(project)=>dispatch(createProject(project ))\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nexport default  connect(mapStateToProps,mapDispatchtoProps)(CreateProject)\r\n","\r\n\r\n\r\n\r\n\r\nexport const createProject = (project)=>{\r\n    return (dispatch , getState, {getFirebase, getFirestore} ) =>{\r\n        //make async cals \r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName:profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(()=> {\r\n            dispatch({\r\n                type:'CREATE_PROJECT',\r\n                payload:project\r\n            });\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type:'CREATE_PROJECT_ERROR',\r\n                payload:err\r\n            });\r\n        })\r\n\r\n\r\n\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter ,Switch , Route  } from  'react-router-dom';\n\nimport Navbar from './component/layouts/Navbar'\nimport Dashboard from './component/dashboard/Dashboard';\nimport ProjectDetails from './component/project/ProjectDetail';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/Signup';\nimport CreateProject from './component/project/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact  path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\n\r\nconst initState = {};\r\n\r\n\r\nconst authReducer = (state=initState , action)=>{\r\n    switch (action.type) {\r\n        case \"LOGIN_ERROR\":\r\n            return {\r\n                ...state, authError :\"Login Failed\"\r\n            }\r\n        case \"LOGIN_SUCESS\":\r\n            return {\r\n                ...state, authError :null\r\n            }    \r\n        case \"SIGNOUT_SUCESS\":\r\n            return state;    \r\n        case \"SIGNUP_SUCESS\":\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case \"SIGNUP_ERROR\":\r\n            return{\r\n                ...state, authError:\"Sign Up Failed \"\r\n            }            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\n","const initState = {\r\n    projects:[\r\n        {id:'1' , title:'hello Mr 1 ' , content:'Blah blah blah'},\r\n        {id:'2' , title:'hello Mr 2 ' , content:'Blah blah blah'},\r\n        {id:'3' , title:'hello Mr 3 ' , content:'Blah blah blah'},\r\n    ]\r\n\r\n\r\n};\r\n\r\n\r\nconst projectReducer = (state=initState , action)=>{\r\n    switch (action.type) {\r\n        case \"CREATE_PROJECT\":\r\n            return state;    \r\n        case \"CREATE_PROJECT_ERROR\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\n\r\nimport {combineReducers } from 'redux';\r\nimport {firestoreReducer } from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n})\r\n\r\nexport default rootReducer;\r\n"," import firebase from 'firebase/app';   \r\n import 'firebase/firestore'   \r\n import 'firebase/auth'\r\n     // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyBQs3kRHiS83bktrudsq60otWmZXcyR04w\",\r\n    authDomain: \"reactproject-796a9.firebaseapp.com\",\r\n    databaseURL: \"https://reactproject-796a9.firebaseio.com\",\r\n    projectId: \"reactproject-796a9\",\r\n    storageBucket: \"reactproject-796a9.appspot.com\",\r\n    messagingSenderId: \"337925590064\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware,compose } from 'redux';\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducer/rootReducer';\nimport thunk from 'redux-thunk'\nimport {reduxFirestore,  getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase ,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer , compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n        useFirestoreForProfile:true, //use the profile attribute in firebase reducer\n        userProfile:'users' , // which collection to add to profile \n        attachAuthIsReady :true}),\n    )\n);\n\n// to stop flicker by waiting on rendering until firebase is ready\n\n// store.attachAuthIsReady().then(() =>{\n//     ReactDOM.render(\n//     <Provider store={store}><App /></Provider>,\n//     document.getElementById('root') );\n// })\n\n ReactDOM.render(\n    <Provider store={store}><App /></Provider>,\n    document.getElementById('root') );\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}